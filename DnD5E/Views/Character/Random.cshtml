@model  DnD5E.Models.CharacterCard
@{
    ViewData["Title"] = "Create Random Character";
    Layout = "_Layout";
}

<div class="container">
    <div class="row">
        <div class="col">
            <section class="character_intro">
                <h2>@Model.Race @Model.Class @Model.Level</h2>
                <q class="character_flavorText">Do you hear that? It is the roaring in my blood.</q>
                <img class="character_avatar" src="https://via.placeholder.com/150" alt="Character Name (@Model.Race @Model.Class)" />
                <div class="content-wrapper">
                    <p>@Model.ClassDescription</p>
                </div>
            </section>

            <section class="character_stats">
                <div class="row">
                    <div class="col-sm-6">
                        <h3>Character Name</h3>
                        <i>@Model.Size humanoid (@Model.Race), draconic bloodline, neutral good</i>
                        <div>
                            <b>Armor Class:</b> 14 (natural armor)
                            <b>Hit Points:</b> @Model.HitPoints.HitPointsCurrent (Hit Dice @(Model.Level)d@(Model.HitPoints.HitDiceAvailable))
                            <b>Speed:</b> @Model.Speed ft.
                        </div>
                        <div>
                            <ul class="abilityScores row">
                                <li class="col-sm-6 col-md-4">
                                    Str
                                    <div>@Model.AbilityScores.Str ( @(Model.AbilityScores.StrMod < 0 ? Model.AbilityScores.StrMod.ToString() : "+" + Model.AbilityScores.StrMod.ToString()) )</div>
                                </li>
                                <li class="col-sm-6 col-md-4">
                                    Dex
                                    <div>@Model.AbilityScores.Dex ( @(Model.AbilityScores.DexMod < 0 ? Model.AbilityScores.DexMod.ToString() : "+" + Model.AbilityScores.DexMod.ToString()) )</div>
                                </li>
                                <li class="col-sm-6 col-md-4">
                                    Con
                                    <div>@Model.AbilityScores.Con ( @(Model.AbilityScores.ConMod < 0 ? Model.AbilityScores.ConMod.ToString() : "+" + Model.AbilityScores.ConMod.ToString()) )</div>
                                </li>
                                <li class="col-sm-6 col-md-4">
                                    Int
                                    <div>@Model.AbilityScores.Int ( @(Model.AbilityScores.IntMod < 0 ? Model.AbilityScores.IntMod.ToString() : "+" + Model.AbilityScores.IntMod.ToString()) )</div>
                                </li>
                                <li class="col-sm-6 col-md-4">
                                    Wis
                                    <div>@Model.AbilityScores.Wis ( @(Model.AbilityScores.WisMod < 0 ? Model.AbilityScores.WisMod.ToString() : "+" + Model.AbilityScores.WisMod.ToString()) )</div>
                                </li>
                                <li class="col-sm-6 col-md-4">
                                    Cha
                                    <div>@Model.AbilityScores.Cha ( @(Model.AbilityScores.ChaMod < 0 ? Model.AbilityScores.ChaMod.ToString() : "+" + Model.AbilityScores.ChaMod.ToString()) )</div>
                                </li>
                            </ul>
                        </div>
                        <div class="character_proficiencies">
                            <div class="content-wrapper">
                                <p><b>Proficiencies</b> (+@Model.ProficiencyBonus proficiency bonus)</p>
                            </div>

                            @if (Model.ProficiencySavingThrows.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Saving Throws:</b> @string.Join(", ", Model.ProficiencySavingThrows)</p>
                                </div>
                            }

                            @if (Model.ProficiencySkills.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Skills:</b> @string.Join(", ", Model.ProficiencySkills)</p>
                                </div>
                            }

                            @if (Model.ProficiencyTools.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Tools:</b> @string.Join(", ", Model.ProficiencyTools)</p>
                                </div>
                            }

                            @if (Model.ProficiencyWeapons.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Weapons:</b> @string.Join(", ", Model.ProficiencyWeapons)</p>
                                </div>
                            }

                            @if (Model.ProficiencyArmor.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Armor:</b> @string.Join(", ", Model.ProficiencyArmor)</p>
                                </div>
                            }

                            @if (Model.Resistance.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Damage Resistances:</b> @string.Join(", ", Model.Resistance)</p>
                                </div>
                            }

                            @if (Model.Immunity.Count > 0)
                            {
                                <div class="content-wrapper">
                                    <p><b>Damage Immunities:</b> @string.Join(", ", Model.Immunity)</p>
                                </div>
                            }

                            <div class="content-wrapper">
                                <p><b>Senses:</b> Passive Perception (@Model.PassivePerception)</p>
                            </div>
                            <div class="content-wrapper">
                                <p><b>Languages:</b> @string.Join(", ", Model.Languages)</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="character_actions">
                            <h4>Actions</h4>
                            <p><b>Attack:</b> You can attack once when you take this action, using the following:</p>
                            <p><b>Quarterstaff:</b> <i>Melee Weapon Attack:</i> +2 to hit, reach 5 ft., one target. <i>Hit:</i> 1d8 bludgeoning damage. <i>Special:</i> Versatile (1d10 bludgeoning damage)</p>
                            <p><b>Dagger:</b> <i>Melee Weapon Attack:</i> +3 to hit, reach 5 ft., one target. <i>Hit:</i> 1d4 + 1 piercing damage. <i>Special:</i> Finesse, Thrown (20/60 ft.)</p>
                            <p><b>Dart:</b> <i>Ranged Weapon Attack:</i> +3 to hit, range 20/60 ft., one target. <i>Hit:</i> 1d4 + 1 piercing damage.</p>
                            <p><b>Cold Breath:</b> Dragonborn trait</p>
                            <p><b>Spellcasting:</b> Sorceror feature</p>
                            <h4>Bonus Actions</h4>
                            <ul class="actions"></ul>
                            <h4>Options</h4>
                            <ul class="actions"></ul>
                        </div>
                    </div>
                </div>
            </section>

            <section class="character_background">
                <h3>Background (@Model.Background.Name)</h3>
                <div class="background">
                    <div class="content-wrapper">
                        <p>@Model.Background.Description</p>

                        @for (int i = 0; i < Model.Background.Feature.Description.Length; i++)
                        {
                            if (i == 0)
                            {
                                <p><b>@(Model.Background.Feature.Name):</b> @Model.Background.Feature.Description[i]</p>
                            }
                            else
                            {
                                <p>@Model.Background.Feature.Description[i]</p>
                            }
                        }
                    </div>

                    <div class="content-wrapper">
                        <p><b>Faction:</b> You are a member of the @Model.Faction.Name, @Model.Faction.Summary.</p>
                        <p>@Model.Faction.Description</p>
                    </div>

                    <div class="content-wrapper">
                        <p><b>Personality Trait:</b> @Model.Background.Personality</p>
                    </div>

                    <div class="content-wrapper">
                        <p><b>Ideal:</b> @Model.Background.Ideal</p>
                    </div>

                    <div class="content-wrapper">
                        <p><b>Bond:</b> @Model.Background.Bond</p>
                    </div>

                    <div class="content-wrapper">
                        <p><b>Flaw:</b> @Model.Background.Flaw</p>
                    </div>
                </div>
            </section>

            <section class="character_traits">
                <h3>@Model.Race Traits</h3>
                @Html.Partial("_FeaturesList", Model.RaceTraits)
            </section>

            <section class="character_features">
                <h3>@Model.Class Features</h3>
                @Html.Partial("_FeaturesList", Model.ClassFeatures)
            </section>

            <section class="character_equipment">
                <h3>Equipment</h3>
                <p>Quarterstaff, dart (20), dagger (2), explorer's pack, hunting trap, drum crafted from a bear's skull, component pouch, traveler's clothes, belt pouch, money (10 gp).</p>
            </section>
        </div>
    </div>
</div>